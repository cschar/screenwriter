got the following to work:


May 9th 2017:
- soundcloud api on npm

Mic Components 
- react sound recorder widget
- upload audio/webm blob and save to file on node server
- download uploaded files back onto client !!!! woooooooooo




Todo: link each scroll to multiple recordings, then fetch em and list beside scroll


May 13th 2017:

Added HUD
    - [frame ] regex for imageview

- cursor tracking in textarea


May 18th 2017:

- Multiple Recordings w/ Description Feature
   relate recordings to single scroll

- Add MongoDB to server instead of in-memory DB
   sync up files to mongo db mic colleciton (painful)
   TODO: use mongoose
   TODO: ask a sage if this is crazy and DRF would be saner
        w/ built in file models etc..

- Refactor api from text to scroll


#TODO: HUD as component
#TODO: Add state manager so React-MIC can save blob on different scrolls.


August 10th 2017:

- Rewrite cowboy express/nodejs backend in django-rest-framework
- Be amazed that it still manages to function
- Consider doing frontend in vue lol

August 11th 2017:

- Learn basics of Redux via todoapp

- Use google Oauth2 frontend react component
    - get the access_token and validate server side its legit
    - grant user api token after oauth2 login

- User redux to manage clientside auth state

- figure out drf private apis
 (Why does it return data, and not data.results...
  queryset related?)


August 12th 2017:

- Created scroll Edit Detail
  - massive move around of react components
  - Pain in the ass learning about props not updating components, but only state
  - Edit detail for recording Mics, continous just for listening

- Redux persist state using localStorage on browser
- Loging / Logout functionality

August 13th 2017:
 - Loading widget when serverside oauth2 validation goin on
 - add some secure api calls for private scroll features
 - recentmic page


August 14th 2017:

- Make app 2 tier pricing thing w/ upgrade option (implement payment later haha)
- Axios singleton, config root hostname
- Deploy!

August 15th 2017:
- Deploying.... setting nginx / letsencrypt / ansible etc..


